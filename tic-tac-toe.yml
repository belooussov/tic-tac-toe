---

# A tic-tac-toe text-console game implemented in Ansible.
# Idea and implementation: Maxim B. Belooussov

- name: Starting a new game
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    A0: " "
    A1: " "
    A2: " "
    B0: " "
    B1: " "
    B2: " "
    C0: " "
    C1: " "
    C2: " "
    board_array:
      - name: A0
        value: "{{ A0 }}"
      - name: A1
        value: "{{ A1 }}"
      - name: A2
        value: "{{ A2 }}"
      - name: B0
        value: "{{ B0 }}"
      - name: B1
        value: "{{ B1 }}"
      - name: B2
        value: "{{ B2 }}"
      - name: C0
        value: "{{ C0 }}"
      - name: C1
        value: "{{ C1 }}"
      - name: C2
        value: "{{ C2 }}"
    empty_fields: "{{ board_array | reject('search', ' ') | list }}"
    available_fields: []
    user_win_condition: ## all 8 possible combinations
      ( A0 == "x" AND A1 == "x" AND A2 == "x" ) OR \
      ( B0 == "x" AND B1 == "x" AND B2 == "x" ) OR \
      ( C0 == "x" AND C1 == "x" AND C2 == "x" ) OR \
      ( A0 == "x" AND B0 == "x" AND C0 == "x" ) OR \
      ( A1 == "x" AND B1 == "x" AND C1 == "x" ) OR \
      ( A2 == "x" AND B2 == "x" AND C2 == "x" ) OR \
      ( A0 == "x" AND B1 == "x" AND C2 == "x" ) OR \
      ( A2 == "x" AND B1 == "x" AND C0 == "x" )
    computer_win_condition:
      ( A0 == "o" AND A1 == "o" AND A2 == "o" ) OR \
      ( B0 == "o" AND B1 == "o" AND B2 == "o" ) OR \
      ( C0 == "o" AND C1 == "o" AND C2 == "o" ) OR \
      ( A0 == "o" AND B0 == "o" AND C0 == "o" ) OR \
      ( A1 == "o" AND B1 == "o" AND C1 == "o" ) OR \
      ( A2 == "o" AND B2 == "o" AND C2 == "o" ) OR \
      ( A0 == "o" AND B1 == "o" AND C2 == "o" ) OR \
      ( A2 == "o" AND B1 == "o" AND C0 == "o" )

  # there can be only up to 9 moves, so just code them all
  tasks:

    - name: Draw the board
      import_tasks: draw.yml

    - name: Print all possible moves
      debug:
        msg: "Possible move: {{ item.name }}"
      when: item.value == " "
      loop: "{{ board_array }}"

    - name: Build a list of all the empty fields
      set_fact:
        available_fields: "{{ available_fields }} + [ '{{ item.name }}' ]"
      when: item.value == " "
      loop: "{{ board_array }}"

#    - name: Print the list of available moves
#      debug:
#        msg: "Available fields are: {{ available_fields | string }}"

    - name: Ask user for the first move  # here we should print the names of the fields, which contain a space
      pause:
         prompt: "Choose one move from the list {{ available_fields | string }}: "
         #prompt: "Make your first move (e.g. B1): "
      register: result

    - name: Set the user selected field to x
      set_fact:
        "{{ result.user_input }}": x

    - name: Draw the board
      import_tasks: draw.yml

#    - name: If we lost - congratulate the user and fail the playbook
#      fail:
#        msg: "Congratulations, you have won!"
#      when: user_win_condition
#
    - name: Check which moves are available
      set_fact:
        available_fields: "{{ available_fields }} + [ '{{ item.name }}' ]"
      when: item.value == " "
      loop: "{{ board_array }}"

    - name: Make our move
      set_fact:
        "{{ available_fields | random }}": o

    - name: Print the board after our move
      import_tasks: draw.yml

#    - name: Check whether we have won
#
#    - name: If we won - wish the user better luck next and quit
#      debug:
#        msg: "Better luck next time!"
#      when: computer_win_condition
